name: Build

on:
  push:
    tags: ['release-*.*.*']

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: dwz

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Lint
      run: cargo clippy
    - name: Install Library
      run: sudo apt-get install libmysqlclient-dev
    - name: Build
      run: cargo build --release
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BINARY_NAME }}
        path: target/release/${{ env.BINARY_NAME }}

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: yy194131/dwz:${{ env.RELEASE_VERSION }}

  deploy:
    runs-on: ubuntu-18.04
    needs: build
    environment: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Copy key file
        run: cp /home/runner/.ssh/id_rsa .

      - name: Execute Ansible Playbook
        uses: saubermacherag/ansible-playbook-docker-action@v1.4
        with:
          playbookName: "ansible.yaml"
          verbosity: "vv"
          KeyFile: "id_rsa"
          extraVars: "-e ANSIBLE_HOST_KEY_CHECKING=False -e DATABASE_URL=${{secrets.DATABASE_URL}}  -e DWZ_HOST=${{secrets.DWZ_HOST}} -e DWZ_PORT=${{secrets.DWZ_PORT}} -e image_tag=${{ env.RELEASE_VERSION }} -i hosts"
